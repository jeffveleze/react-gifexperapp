{"version":3,"sources":["componets/AddCategory.js","helpers/getGifs.js","componets/GifGridItem.js","componets/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","console","log","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","index","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAC5B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACC,sBAAMC,SAVc,SAACC,GACrBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC9BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC5CN,EAAc,MAKf,SACC,uBACCO,KAAK,OACLC,MAAQT,EACRU,SAlBuB,SAACP,GAC1BF,EAAcE,EAAEQ,OAAOF,a,+BCPZG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAChBC,EADgB,iDACgCC,UAAUH,GAD1C,+DAEHI,MAAQF,GAFL,cAEhBG,EAFgB,gBAGCA,EAAKC,OAHN,uBAGdC,EAHc,EAGdA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC5B,MAAO,CACNC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAIpCa,QAAQC,IAAIR,GAbU,kBAcfA,GAde,4CAAH,sDCEPS,EAAc,SAAC,GAAuB,EAArBN,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACxC,OACC,sBAAKgB,UAAU,yCAAf,UACC,qBAAKC,IAAMjB,EAAMkB,IAAMR,IACvB,kCAAKA,EAAL,WCFUS,EAAU,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SACxB,ECF2B,SAACA,GAC5B,MAA0Bd,mBAAS,CAClCqB,KAAM,GACNe,SAAS,IAFV,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OATAC,qBAAW,WACV1B,EAAQC,GAAU0B,MAAK,SAAAC,GACtBH,EAAS,CACRjB,KAAMoB,EACNL,SAAS,SAGT,CAACtB,IAEGuB,EDbwBK,CAAa5B,GAAhCa,EAAZ,EAAON,KAAae,EAApB,EAAoBA,QAEpB,OACC,qCACC,oBAAIJ,UAAU,oCAAd,SAAmDlB,IACjDsB,GAAW,mBAAGJ,UAAU,mCAAb,wBAEb,qBAAKA,UAAU,YAAf,SACC,6BAEEL,EAAOJ,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAEMA,GADCA,EAAIC,eEXLkB,EAAe,WAC3B,MAAoC3C,mBAAS,CAAC,cAA9C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAEA,OACC,qCACC,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAE5B,uBAEA,6BAEES,EAAWe,KAAK,SAACT,EAAU8B,GAAX,OACf,cAAC,EAAD,CAEC9B,SAAUA,GADL8B,Y,MCfZC,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2bf6bd50.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport { React, useState } from 'react';\n\nexport const AddCategory = ({setCategories}) => {\n\tconst [inputValue, setInputValue] = useState('');\n\n\tconst handleInputChange = (e) => {\n\t\tsetInputValue(e.target.value);\n\t}\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\tif (inputValue.trim().length > 2) {\n\t\t\tsetCategories(categories => [inputValue, ...categories]);\n\t\t\tsetInputValue('');\n\t\t}\n\t}\n\n\treturn (\n\t\t<form onSubmit={ handleSubmit }>\n\t\t\t<input \n\t\t\t\ttype=\"text\"\n\t\t\t\tvalue={ inputValue }\n\t\t\t\tonChange= { handleInputChange }\n\t\t\t/>\n\t\t</form>\n\t)\n}\n\nAddCategory.propTypes = {\n\tsetCategories: PropTypes.func.isRequired\n}\n\n","export const getGifs = async( category ) => {\n\tconst url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=AJ0GVAUJpBS1SzQUUhB8FxzOzgneXQ55`;\n\tconst resp = await fetch ( url );\n\tconst { data } = await resp.json();\n\n\tconst gifs = data.map(img => {\n\t\treturn {\n\t\t\tid: img.id,\n\t\t\ttitle: img.title,\n\t\t\turl: img.images?.downsized_medium.url\n\t\t}\n\t});\n\n\tconsole.log(gifs);\n\treturn gifs;\n}","import React from 'react';\n\nexport const GifGridItem = ( {id, title, url} ) => {\n\treturn (\n\t\t<div className=\"card animate__animated animate__fadeIn\">\n\t\t\t<img src={ url } alt={ title } />\n\t\t\t<p> {title} </p>\n\t\t</div>\n\t)\n}\n","import { React } from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({category}) => {\n\tconst {data:images, loading} = useFetchGifs(category);\n\n\treturn (\n\t\t<>\n\t\t\t<h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n\t\t\t{ loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\n\t\t\t\n\t\t\t<div className=\"card-grid\">\n\t\t\t\t<ol>\n\t\t\t\t\t{\n\t\t\t\t\t\timages.map((img) => (\n\t\t\t\t\t\t\t<GifGridItem\n\t\t\t\t\t\t\t\tkey={ img.id }\n\t\t\t\t\t\t\t\t{ ...img }\n\t\t\t\t\t\t\t/> \n\t\t\t\t\t\t))\n\t\t\t\t\t}\n\t\t\t\t</ol>\n\t\t\t</div>\n\t\t</>\n\t)\n}\n","import { useEffect, useState } from \"react\";\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n\tconst [state, setstate] = useState({\n\t\tdata: [],\n\t\tloading: true,\n\t});\n\n\tuseEffect( () => {\n\t\tgetGifs(category).then(imgs => {\n\t\t\tsetstate({\n\t\t\t\tdata: imgs,\n\t\t\t\tloading: false,\n\t\t\t})\n\t\t})\n\t}, [category])\n\n\treturn state\n}","import { React, useState } from 'react';\nimport { AddCategory } from './componets/AddCategory';\nimport { GifGrid } from './componets/GifGrid';\n\n\n\nexport const GifExpertApp = () => {\n\tconst [categories, setCategories] = useState(['One punch'])\n\n\treturn (\n\t\t<>\n\t\t\t<h2>GifExpertApp</h2>\n\t\t\t<AddCategory setCategories={setCategories}/>\n\t\t\t\n\t\t\t<hr />\n\n\t\t\t<ol>\n\t\t\t\t{\n\t\t\t\t\tcategories.map( (category, index) =>\n\t\t\t\t\t\t<GifGrid\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\tcategory={category}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t</ol>\t\n\t\t</>\n\t)\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}